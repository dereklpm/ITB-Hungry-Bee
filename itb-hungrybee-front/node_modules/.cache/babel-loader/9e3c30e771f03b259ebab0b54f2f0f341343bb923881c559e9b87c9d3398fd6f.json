{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst state = {\n  cart: [],\n  cartCount: 0\n};\nconst mutations = {\n  addToCart(state, product) {\n    if (!state.cart.some(p => p.id === product.id)) {\n      product.quantity = 1;\n      state.cart.push(product);\n      state.cartCount++;\n    }\n  },\n  removeProduct(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      state.cart.splice(state.cart.indexOf(existingProduct), 1);\n      state.cartCount -= 1;\n    }\n  },\n  clearCart(state) {\n    state.cart = [];\n    state.cartCount = 0;\n  },\n  increaseQuantity(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      existingProduct.quantity++;\n      state.cartCount++;\n    }\n  },\n  decreaseQuantity(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      existingProduct.quantity--;\n      state.cartCount--;\n    }\n  },\n  updateQuantity(state, {\n    product,\n    quantity\n  }) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      state.cartCount -= existingProduct.quantity;\n      existingProduct.quantity = quantity;\n      state.cartCount += existingProduct.quantity;\n    }\n  },\n  getProductPrice(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      return existingProduct.quantity * existingProduct.price;\n    }\n  }\n};\nconst getters = {\n  cart: state => state.cart.map(item => ({\n    ...item\n  })),\n  cartCount: state => state.cartCount\n};\nconst actions = {};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions\n};","map":{"version":3,"names":["state","cart","cartCount","mutations","addToCart","product","some","p","id","quantity","push","removeProduct","existingProduct","find","splice","indexOf","clearCart","increaseQuantity","decreaseQuantity","updateQuantity","getProductPrice","price","getters","map","item","actions","namespaced"],"sources":["/Users/dereklee/Project/itb-hungrybee-front/src/store/modules/cart.js"],"sourcesContent":["const state = {\n  cart: [],\n  cartCount: 0,\n};\n\nconst mutations = {\n  addToCart(state, product) {\n    if(!state.cart.some(p => p.id === product.id)){\n      product.quantity = 1;\n      state.cart.push(product);\n      state.cartCount++;\n    }\n  },\n  removeProduct(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      state.cart.splice(state.cart.indexOf(existingProduct), 1);\n      state.cartCount -= 1;\n    }\n  },\n  clearCart(state) {\n    state.cart = [];\n    state.cartCount = 0;\n  },\n  increaseQuantity(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      existingProduct.quantity++;\n      state.cartCount++;\n    }\n  },\n  decreaseQuantity(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      existingProduct.quantity--;\n      state.cartCount--;\n    }\n  },\n  updateQuantity(state, {product, quantity}) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      state.cartCount -= existingProduct.quantity;\n      existingProduct.quantity = quantity;\n      state.cartCount += existingProduct.quantity;\n    }\n  },\n  getProductPrice(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      return existingProduct.quantity * existingProduct.price;\n    }\n  }\n};\n\nconst getters = {\n  cart: state => state.cart.map(item => ({...item})),\n  cartCount: state => state.cartCount,\n};\n\nconst actions = {\n\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions,\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}