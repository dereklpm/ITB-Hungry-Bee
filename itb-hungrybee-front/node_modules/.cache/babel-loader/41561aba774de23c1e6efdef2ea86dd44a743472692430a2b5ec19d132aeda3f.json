{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst state = {\n  cart: [],\n  cartCount: 0\n};\nconst mutations = {\n  addToCart(state, product) {\n    var cartArr = [];\n    var cartCount = 0;\n    var cart = localStorage.getItem('cart');\n    if (cart == null) {\n      cartArr.push(product);\n      cartCount++;\n    } else {\n      cartArr = JSON.parse(cart).data;\n      cartCount = localStorage.getItem('cartCount');\n      if (!cartArr.some(item => item.id === product.id)) {\n        cartArr.push(product);\n        cartCount++;\n      }\n    }\n    var cartObj = {\n      data: cartArr\n    };\n    localStorage.setItem('cart', JSON.stringify(cartObj));\n    localStorage.setItem('cartCount', JSON.stringify(cartCount));\n  }\n  // removeProduct(state, product) {\n  //   var cart = localStorage.getItem('cart');\n  //   var cartObj = JSON.parse(cart);\n  //   var cartCount = localStorage.getItem('cartCount');\n  //   const existingProduct = cartObj.find(p => p.id === product.id);\n  //   if (existingProduct) {\n  //     cartObj.splice(cartObj.indexOf(existingProduct), 1);\n  //     cartCount -= 1;\n\n  //     localStorage.setItem('cart', JSON.stringify(cart));\n  //     localStorage.setItem('cartCount', JSON.stringify(cartCount));\n  //   }\n  // },\n  // clearCart(state) {\n  //   state.cart = [];\n  //   state.cartCount = 0;\n  //   localStorage.removeItem('cart');\n  //   localStorage.removeItem('cartCount');\n  // },\n};\n\nconst getters = {\n  cart: localStorage.getItem('cart'),\n  cartCount: state => localStorage.getItem('cartCount')\n};\nconst actions = {\n  // initCart({ commit }) {\n  //   const cart = JSON.parse(localStorage.getItem('cart'));\n  //   const cartCount = JSON.parse(localStorage.getItem('cartCount'));\n  //   if (cart) {\n  //     commit('setCart', cart);\n  //   }\n  //   if (cartCount) {\n  //     commit('setCartCount', cartCount);\n  //   }\n  // },\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions\n};","map":{"version":3,"names":["state","cart","cartCount","mutations","addToCart","product","cartArr","localStorage","getItem","push","JSON","parse","data","some","item","id","cartObj","setItem","stringify","getters","actions","namespaced"],"sources":["/Users/dereklee/Project/itb-hungrybee-front/src/store/modules/cart.js"],"sourcesContent":["const state = {\n  cart: [],\n  cartCount: 0,\n};\n\nconst mutations = {\n  addToCart(state, product) {\n    var cartArr = [];\n    var cartCount = 0;\n\n    var cart = localStorage.getItem('cart');\n    if(cart == null){\n      cartArr.push(product);\n      cartCount++;\n    }\n    else{\n      cartArr = JSON.parse(cart).data;\n      cartCount = localStorage.getItem('cartCount');\n\n      if(!cartArr.some(item => item.id === product.id)){\n        cartArr.push(product);\n        cartCount++;\n      }\n    }\n\n    var cartObj = {\n      data:cartArr\n    }\n\n    localStorage.setItem('cart', JSON.stringify(cartObj));\n    localStorage.setItem('cartCount', JSON.stringify(cartCount));\n  },\n  // removeProduct(state, product) {\n  //   var cart = localStorage.getItem('cart');\n  //   var cartObj = JSON.parse(cart);\n  //   var cartCount = localStorage.getItem('cartCount');\n  //   const existingProduct = cartObj.find(p => p.id === product.id);\n  //   if (existingProduct) {\n  //     cartObj.splice(cartObj.indexOf(existingProduct), 1);\n  //     cartCount -= 1;\n\n  //     localStorage.setItem('cart', JSON.stringify(cart));\n  //     localStorage.setItem('cartCount', JSON.stringify(cartCount));\n  //   }\n  // },\n  // clearCart(state) {\n  //   state.cart = [];\n  //   state.cartCount = 0;\n  //   localStorage.removeItem('cart');\n  //   localStorage.removeItem('cartCount');\n  // },\n};\n\nconst getters = {\n  cart: localStorage.getItem('cart'),\n  cartCount: state => localStorage.getItem('cartCount'),\n};\n\nconst actions = {\n  // initCart({ commit }) {\n  //   const cart = JSON.parse(localStorage.getItem('cart'));\n  //   const cartCount = JSON.parse(localStorage.getItem('cartCount'));\n  //   if (cart) {\n  //     commit('setCart', cart);\n  //   }\n  //   if (cartCount) {\n  //     commit('setCartCount', cartCount);\n  //   }\n  // },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions,\n};"],"mappings":";AAAA,MAAMA,KAAK,GAAG;EACZC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAAS,CAACJ,KAAK,EAAEK,OAAO,EAAE;IACxB,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAIJ,SAAS,GAAG,CAAC;IAEjB,IAAID,IAAI,GAAGM,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACvC,IAAGP,IAAI,IAAI,IAAI,EAAC;MACdK,OAAO,CAACG,IAAI,CAACJ,OAAO,CAAC;MACrBH,SAAS,EAAE;IACb,CAAC,MACG;MACFI,OAAO,GAAGI,IAAI,CAACC,KAAK,CAACV,IAAI,CAAC,CAACW,IAAI;MAC/BV,SAAS,GAAGK,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE7C,IAAG,CAACF,OAAO,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKV,OAAO,CAACU,EAAE,CAAC,EAAC;QAC/CT,OAAO,CAACG,IAAI,CAACJ,OAAO,CAAC;QACrBH,SAAS,EAAE;MACb;IACF;IAEA,IAAIc,OAAO,GAAG;MACZJ,IAAI,EAACN;IACP,CAAC;IAEDC,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACF,OAAO,CAAC,CAAC;IACrDT,YAAY,CAACU,OAAO,CAAC,WAAW,EAAEP,IAAI,CAACQ,SAAS,CAAChB,SAAS,CAAC,CAAC;EAC9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,MAAMiB,OAAO,GAAG;EACdlB,IAAI,EAAEM,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAClCN,SAAS,EAAEF,KAAK,IAAIO,YAAY,CAACC,OAAO,CAAC,WAAW;AACtD,CAAC;AAED,MAAMY,OAAO,GAAG;EACd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AAED,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBrB,KAAK;EACLG,SAAS;EACTgB,OAAO;EACPC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}