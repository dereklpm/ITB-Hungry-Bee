{"ast":null,"code":"import dealsList from \"../data/dealsList\";\nimport client from \"../api\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"IndexPage\",\n  data() {\n    return {\n      isLoading: false,\n      dealsList,\n      categoryList: [],\n      productList: [],\n      selectedCategory: null,\n      searchProduct: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters({\n      isLogin: \"auth/isAuth\"\n    })\n  },\n  methods: {\n    searchProductbyword(val) {\n      console.log(\"searchProduct\");\n      console.log(val);\n      this.searchProduct = val;\n    },\n    loadData() {\n      this.isLoading = true;\n      const promise1 = client.get('/api/product/list').then(response => {\n        console.log(\"/api/product\");\n        console.log(response.data);\n        this.productList = response.data.data;\n      });\n      const promise2 = client.get('/api/category/list').then(({\n        data: {\n          data = []\n        } = {}\n      }) => {\n        console.log(\"/api/categories\");\n        console.log(data);\n        this.categoryList = data;\n      });\n      Promise.all([promise1, promise2]).finally(() => {\n        this.isLoading = false;\n      });\n    },\n    clickCategory(categoryObject) {\n      const {\n        id\n      } = categoryObject;\n      if (this.selectedCategory === id) {\n        this.selectedCategory = null;\n      } else {\n        this.selectedCategory = id;\n      }\n    }\n  },\n  mounted() {\n    this.loadData();\n  }\n};","map":{"version":3,"mappings":"AA6CA;AAEA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACAC;MACAA;MACA;IACA;IACAC;MACA;MAEA,iDACAC;QACAF;QACAA;QACA;MACA;MAEA,kDACAE;QAAAb;UAAAA;QAAA;MAAA;QACAW;QACAA;QACA;MACA;MAEAG,kCACAC;QACA;MACA;IACA;IACAC;MACA;QAAAC;MAAA;MAEA;QACA;MACA;QACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","isLoading","dealsList","categoryList","productList","selectedCategory","searchProduct","computed","isLogin","methods","searchProductbyword","console","loadData","then","Promise","finally","clickCategory","id","mounted"],"sourceRoot":"src/pages","sources":["IndexPage.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"container\">\n      <!-- ========Deals page========== -->\n      <!-- <div class=\"deals__list\">\n        <DealCard\n          v-for=\"(dealCard, index) in dealsList\"\n          :key=\"`dealCard__${index}`\"\n          :variant=\"dealCard.variant\"\n          :title=\"dealCard.title\"\n          :offer=\"dealCard.offer\"\n          :tag=\"dealCard.tag\"\n        />\n      </div> -->\n      <div class=\"index__search\">\n        <BaseInput placeholder=\"Dish...\" v-model=\"searchProduct\" :type=\"search\" @searchFunc=\"searchProductbyword()\" />\n      </div>\n\n      <div class=\"category__list\" v-if=\"isLoading\">\n        <CategoryCardSkeleton v-for=\"(_, index) in Array.from({ length: 6 }).fill(0)\"\n          :key=\"`categorySkeleton__${index}`\" />\n      </div>\n\n      <div class=\"category__list\" v-if=\"!isLoading\">\n        <CategoryCard v-for=\"(categoryCard, index) in categoryList\" :key=\"`categoryCard__${index}`\"\n          :title=\"categoryCard.name\" :image=\"categoryCard.image\" :selected=\"categoryCard.id === selectedCategory\"\n          @onClick=\"() => clickCategory(categoryCard)\" />\n      </div>\n\n      <!-- ============Product card=========== -->\n      <div class=\"products__list\" v-if=\"isLoading\">\n        <ProductCardSkeleton v-for=\"(_, index) in Array.from({ length: 6 }).fill(0)\" :key=\"`productSkeleton__${index}`\" />\n      </div>\n\n      <div class=\"products__list\" v-if=\"!isLoading\">\n        <ProductCard v-for=\"(product) in productList\" :key=\"`productCard__${product.id}`\" :product=\"product\"\n          :image=\"product.image\" :featured=\"product.featured\" :title=\"product.name\" :minTime=\"product.minDeliverTime\"\n          :maxTime=\"product.maxDeliverTime\" :minSum=\"product.deliveryFee\" :tags=\"product.tags\" :ranking=\"product.ranking\"\n          :isLogin=\"isLogin\" :category=\"selectedCategory\" :searchProduct=\"searchProduct\" />\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport dealsList from \"../data/dealsList\";\n\nimport client from \"../api\"\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"IndexPage\",\n  data() {\n    return {\n      isLoading: false,\n      dealsList,\n      categoryList: [],\n      productList: [],\n      selectedCategory: null,\n      searchProduct: \"\",\n    };\n  },\n  computed: {\n    ...mapGetters({\n      isLogin: \"auth/isAuth\",\n    }),\n  },\n  methods: {\n    searchProductbyword(val) {\n      console.log(\"searchProduct\")\n      console.log(val)\n      this.searchProduct = val;\n    },\n    loadData() {\n      this.isLoading = true\n\n      const promise1 = client.get('/api/product/list')\n        .then((response) => {\n          console.log(\"/api/product\")\n          console.log(response.data)\n          this.productList = response.data.data;\n        })\n\n      const promise2 = client.get('/api/category/list')\n        .then(({ data: { data = [] } = {} }) => {\n          console.log(\"/api/categories\")\n          console.log(data)\n          this.categoryList = data;\n        })\n\n      Promise.all([promise1, promise2])\n        .finally(() => {\n          this.isLoading = false\n        })\n    },\n    clickCategory(categoryObject) {\n      const { id } = categoryObject;\n\n      if (this.selectedCategory === id) {\n        this.selectedCategory = null\n      } else {\n        this.selectedCategory = id\n      }\n    }\n  },\n  mounted() {\n    this.loadData();\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.deals {\n  &__list {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 30px;\n    margin-bottom: 32px;\n  }\n}\n\n.category {\n  &__list {\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    grid-gap: 5px;\n    margin-bottom: 20px;\n  }\n}\n\n.products {\n  &__list {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 30px;\n    margin-bottom: 100px;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .deals {\n    &__list {\n      grid-template-columns: 1fr;\n    }\n  }\n\n  .category {\n    &__list {\n      grid-template-columns: repeat(3, 1fr);\n    }\n  }\n\n  .products {\n    &__list {\n      grid-template-columns: 1fr;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}