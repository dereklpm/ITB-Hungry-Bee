{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst state = {\n  cart: [],\n  cartCount: 0\n};\nconst mutations = {\n  addToCart(state, product) {\n    if (!state.cart.some(p => p.id === product.id)) {\n      product.quantity = 1;\n      state.cart.push(product);\n      state.cartCount++;\n    }\n  },\n  removeProduct(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      state.cart.splice(state.cart.indexOf(existingProduct), 1);\n      state.cartCount -= 1;\n    }\n  },\n  clearCart(state) {\n    state.cart = [];\n    state.cartCount = 0;\n  },\n  increaseQuantity(state, id) {\n    const existingItem = state.cart.find(item => item.id === id);\n    if (existingItem) {\n      existingItem.quantity++;\n    }\n    state.cartCount++;\n  },\n  decreaseQuantity(state, id) {\n    const existingItem = state.cart.find(item => item.id === id);\n    if (existingItem && existingItem.quantity > 0) {\n      existingItem.quantity--;\n      state.cartCount--;\n    }\n  },\n  updateQuantity(state, {\n    id,\n    quantity\n  }) {\n    const existingItem = state.cart.find(item => item.id === id);\n    if (existingItem) {\n      existingItem.quantity = quantity;\n      state.cartCount += quantity - existingItem.quantity;\n    }\n  }\n};\nconst getters = {\n  cart: state => state.cart.map(item => ({\n    ...item\n  })),\n  cartCount: state => state.cartCount,\n  getQuantityById: state => id => {\n    const product = state.cart.find(p => p.id === id);\n    return product ? product.quantity : 0;\n  }\n};\nconst actions = {};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions\n};","map":{"version":3,"names":["state","cart","cartCount","mutations","addToCart","product","some","p","id","quantity","push","removeProduct","existingProduct","find","splice","indexOf","clearCart","increaseQuantity","existingItem","item","decreaseQuantity","updateQuantity","getters","map","getQuantityById","actions","namespaced"],"sources":["/Users/dereklee/Project/itb-hungrybee-front/src/store/modules/cart.js"],"sourcesContent":["const state = {\n  cart: [],\n  cartCount: 0,\n};\n\nconst mutations = {\n  addToCart(state, product) {\n    if(!state.cart.some(p => p.id === product.id)){\n      product.quantity = 1;\n      state.cart.push(product);\n      state.cartCount++;\n    }\n  },\n  removeProduct(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      state.cart.splice(state.cart.indexOf(existingProduct), 1);\n      state.cartCount -= 1;\n    }\n  },\n  clearCart(state) {\n    state.cart = [];\n    state.cartCount = 0;\n  },\n  increaseQuantity(state, id) {\n    const existingItem = state.cart.find(item => item.id === id);\n    if (existingItem) {\n      existingItem.quantity++;\n    }\n    state.cartCount++;\n  },\n  decreaseQuantity(state, id) {\n    const existingItem = state.cart.find(item => item.id === id);\n    if (existingItem && existingItem.quantity > 0) {\n      existingItem.quantity--;\n      state.cartCount--;\n    }\n  },\n  updateQuantity(state, { id, quantity }) {\n    const existingItem = state.cart.find(item => item.id === id);\n    if (existingItem) {\n      existingItem.quantity = quantity;\n      state.cartCount += quantity - existingItem.quantity;\n    }\n  }\n};\n\nconst getters = {\n  cart: state => state.cart.map(item => ({...item})),\n  cartCount: state => state.cartCount,\n  getQuantityById: state => id => {\n   const product = state.cart.find(p => p.id === id);\n   return product ? product.quantity : 0;\n  }\n};\n\nconst actions = {\n\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions,\n};"],"mappings":";AAAA,MAAMA,KAAK,GAAG;EACZC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAAS,CAACJ,KAAK,EAAEK,OAAO,EAAE;IACxB,IAAG,CAACL,KAAK,CAACC,IAAI,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,CAAC,EAAC;MAC5CH,OAAO,CAACI,QAAQ,GAAG,CAAC;MACpBT,KAAK,CAACC,IAAI,CAACS,IAAI,CAACL,OAAO,CAAC;MACxBL,KAAK,CAACE,SAAS,EAAE;IACnB;EACF,CAAC;EACDS,aAAa,CAACX,KAAK,EAAEK,OAAO,EAAE;IAC5B,MAAMO,eAAe,GAAGZ,KAAK,CAACC,IAAI,CAACY,IAAI,CAACN,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,CAAC;IACjE,IAAII,eAAe,EAAE;MACnBZ,KAAK,CAACC,IAAI,CAACa,MAAM,CAACd,KAAK,CAACC,IAAI,CAACc,OAAO,CAACH,eAAe,CAAC,EAAE,CAAC,CAAC;MACzDZ,KAAK,CAACE,SAAS,IAAI,CAAC;IACtB;EACF,CAAC;EACDc,SAAS,CAAChB,KAAK,EAAE;IACfA,KAAK,CAACC,IAAI,GAAG,EAAE;IACfD,KAAK,CAACE,SAAS,GAAG,CAAC;EACrB,CAAC;EACDe,gBAAgB,CAACjB,KAAK,EAAEQ,EAAE,EAAE;IAC1B,MAAMU,YAAY,GAAGlB,KAAK,CAACC,IAAI,CAACY,IAAI,CAACM,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAIU,YAAY,EAAE;MAChBA,YAAY,CAACT,QAAQ,EAAE;IACzB;IACAT,KAAK,CAACE,SAAS,EAAE;EACnB,CAAC;EACDkB,gBAAgB,CAACpB,KAAK,EAAEQ,EAAE,EAAE;IAC1B,MAAMU,YAAY,GAAGlB,KAAK,CAACC,IAAI,CAACY,IAAI,CAACM,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAIU,YAAY,IAAIA,YAAY,CAACT,QAAQ,GAAG,CAAC,EAAE;MAC7CS,YAAY,CAACT,QAAQ,EAAE;MACvBT,KAAK,CAACE,SAAS,EAAE;IACnB;EACF,CAAC;EACDmB,cAAc,CAACrB,KAAK,EAAE;IAAEQ,EAAE;IAAEC;EAAS,CAAC,EAAE;IACtC,MAAMS,YAAY,GAAGlB,KAAK,CAACC,IAAI,CAACY,IAAI,CAACM,IAAI,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,CAAC;IAC5D,IAAIU,YAAY,EAAE;MAChBA,YAAY,CAACT,QAAQ,GAAGA,QAAQ;MAChCT,KAAK,CAACE,SAAS,IAAIO,QAAQ,GAAGS,YAAY,CAACT,QAAQ;IACrD;EACF;AACF,CAAC;AAED,MAAMa,OAAO,GAAG;EACdrB,IAAI,EAAED,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACsB,GAAG,CAACJ,IAAI,KAAK;IAAC,GAAGA;EAAI,CAAC,CAAC,CAAC;EAClDjB,SAAS,EAAEF,KAAK,IAAIA,KAAK,CAACE,SAAS;EACnCsB,eAAe,EAAExB,KAAK,IAAIQ,EAAE,IAAI;IAC/B,MAAMH,OAAO,GAAGL,KAAK,CAACC,IAAI,CAACY,IAAI,CAACN,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC;IACjD,OAAOH,OAAO,GAAGA,OAAO,CAACI,QAAQ,GAAG,CAAC;EACtC;AACF,CAAC;AAED,MAAMgB,OAAO,GAAG,CAEhB,CAAC;AAED,eAAe;EACbC,UAAU,EAAE,IAAI;EAChB1B,KAAK;EACLG,SAAS;EACTmB,OAAO;EACPG;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}