{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst state = {\n  cart: [],\n  cartCount: 0\n};\nconst mutations = {\n  addToCart(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      existingProduct.quantity += 1;\n    } else {\n      state.cart.push({\n        ...product,\n        quantity: 1\n      });\n    }\n    state.cartCount += 1;\n    localStorage.setItem('cart', JSON.stringify(state.cart));\n    localStorage.setItem('cartCount', JSON.stringify(state.cartCount));\n  },\n  removeProduct(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      if (existingProduct.quantity > 1) {\n        existingProduct.quantity -= 1;\n      } else {\n        state.cart.splice(state.cart.indexOf(existingProduct), 1);\n      }\n      state.cartCount -= 1;\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n      localStorage.setItem('cartCount', JSON.stringify(state.cartCount));\n    }\n  },\n  clearCart(state) {\n    state.cart = [];\n    state.cartCount = 0;\n    localStorage.removeItem('cart');\n    localStorage.removeItem('cartCount');\n  }\n};\nconst getters = {\n  cart: state => state.cart,\n  cartCount: state => state.cartCount\n};\nconst actions = {\n  initCart({\n    commit\n  }) {\n    const cart = JSON.parse(localStorage.getItem('cart'));\n    const cartCount = JSON.parse(localStorage.getItem('cartCount'));\n    if (cart) {\n      commit('setCart', cart);\n    }\n    if (cartCount) {\n      commit('setCartCount', cartCount);\n    }\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions\n};","map":{"version":3,"names":["state","cart","cartCount","mutations","addToCart","product","existingProduct","find","p","id","quantity","push","localStorage","setItem","JSON","stringify","removeProduct","splice","indexOf","clearCart","removeItem","getters","actions","initCart","commit","parse","getItem","namespaced"],"sources":["/Users/dereklee/Project/itb-hungrybee-front/src/store/modules/cart.js"],"sourcesContent":["const state = {\n  cart: [],\n  cartCount: 0,\n};\n\nconst mutations = {\n  addToCart(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      existingProduct.quantity += 1;\n    } else {\n      state.cart.push({ ...product, quantity: 1 });\n    }\n    state.cartCount += 1;\n    localStorage.setItem('cart', JSON.stringify(state.cart));\n    localStorage.setItem('cartCount', JSON.stringify(state.cartCount));\n  },\n  removeProduct(state, product) {\n    const existingProduct = state.cart.find(p => p.id === product.id);\n    if (existingProduct) {\n      if (existingProduct.quantity > 1) {\n        existingProduct.quantity -= 1;\n      } else {\n        state.cart.splice(state.cart.indexOf(existingProduct), 1);\n      }\n      state.cartCount -= 1;\n      localStorage.setItem('cart', JSON.stringify(state.cart));\n      localStorage.setItem('cartCount', JSON.stringify(state.cartCount));\n    }\n  },\n  clearCart(state) {\n    state.cart = [];\n    state.cartCount = 0;\n    localStorage.removeItem('cart');\n    localStorage.removeItem('cartCount');\n  },\n};\n\nconst getters = {\n  cart: state => state.cart,\n  cartCount: state => state.cartCount,\n};\n\nconst actions = {\n  initCart({ commit }) {\n    const cart = JSON.parse(localStorage.getItem('cart'));\n    const cartCount = JSON.parse(localStorage.getItem('cartCount'));\n    if (cart) {\n      commit('setCart', cart);\n    }\n    if (cartCount) {\n      commit('setCartCount', cartCount);\n    }\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n  actions,\n};"],"mappings":";AAAA,MAAMA,KAAK,GAAG;EACZC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAG;EAChBC,SAAS,CAACJ,KAAK,EAAEK,OAAO,EAAE;IACxB,MAAMC,eAAe,GAAGN,KAAK,CAACC,IAAI,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IACjE,IAAIH,eAAe,EAAE;MACnBA,eAAe,CAACI,QAAQ,IAAI,CAAC;IAC/B,CAAC,MAAM;MACLV,KAAK,CAACC,IAAI,CAACU,IAAI,CAAC;QAAE,GAAGN,OAAO;QAAEK,QAAQ,EAAE;MAAE,CAAC,CAAC;IAC9C;IACAV,KAAK,CAACE,SAAS,IAAI,CAAC;IACpBU,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACC,IAAI,CAAC,CAAC;IACxDW,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACE,SAAS,CAAC,CAAC;EACpE,CAAC;EACDc,aAAa,CAAChB,KAAK,EAAEK,OAAO,EAAE;IAC5B,MAAMC,eAAe,GAAGN,KAAK,CAACC,IAAI,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IACjE,IAAIH,eAAe,EAAE;MACnB,IAAIA,eAAe,CAACI,QAAQ,GAAG,CAAC,EAAE;QAChCJ,eAAe,CAACI,QAAQ,IAAI,CAAC;MAC/B,CAAC,MAAM;QACLV,KAAK,CAACC,IAAI,CAACgB,MAAM,CAACjB,KAAK,CAACC,IAAI,CAACiB,OAAO,CAACZ,eAAe,CAAC,EAAE,CAAC,CAAC;MAC3D;MACAN,KAAK,CAACE,SAAS,IAAI,CAAC;MACpBU,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACC,IAAI,CAAC,CAAC;MACxDW,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACf,KAAK,CAACE,SAAS,CAAC,CAAC;IACpE;EACF,CAAC;EACDiB,SAAS,CAACnB,KAAK,EAAE;IACfA,KAAK,CAACC,IAAI,GAAG,EAAE;IACfD,KAAK,CAACE,SAAS,GAAG,CAAC;IACnBU,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BR,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;EACtC;AACF,CAAC;AAED,MAAMC,OAAO,GAAG;EACdpB,IAAI,EAAED,KAAK,IAAIA,KAAK,CAACC,IAAI;EACzBC,SAAS,EAAEF,KAAK,IAAIA,KAAK,CAACE;AAC5B,CAAC;AAED,MAAMoB,OAAO,GAAG;EACdC,QAAQ,CAAC;IAAEC;EAAO,CAAC,EAAE;IACnB,MAAMvB,IAAI,GAAGa,IAAI,CAACW,KAAK,CAACb,YAAY,CAACc,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,MAAMxB,SAAS,GAAGY,IAAI,CAACW,KAAK,CAACb,YAAY,CAACc,OAAO,CAAC,WAAW,CAAC,CAAC;IAC/D,IAAIzB,IAAI,EAAE;MACRuB,MAAM,CAAC,SAAS,EAAEvB,IAAI,CAAC;IACzB;IACA,IAAIC,SAAS,EAAE;MACbsB,MAAM,CAAC,cAAc,EAAEtB,SAAS,CAAC;IACnC;EACF;AACF,CAAC;AAED,eAAe;EACbyB,UAAU,EAAE,IAAI;EAChB3B,KAAK;EACLG,SAAS;EACTkB,OAAO;EACPC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}