{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapMutations, mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"OrdersPage\",\n  computed: {\n    ...mapState(\"cart\", [\"cartCount\", \"cart\"]),\n    ...mapGetters(\"auth\", [\"getUser\"]),\n    ...mapActions({\n      submitOrder: \"order/submitOrder\"\n    })\n  },\n  data() {\n    return {\n      userData: null,\n      editAddress: false,\n      address: \"\",\n      newAddress: \"\",\n      payments: [],\n      subTotal: 0,\n      deliveryFee: 0,\n      serviceFee: 0,\n      totalPrice: 0,\n      selectedCard: \"\"\n    };\n  },\n  methods: {\n    ...mapMutations(\"user\", [\"setUserAddress\", \"setNewPaymentMethod\"]),\n    updateAddress() {\n      this.setUserAddress(this.newAddress);\n      this.newAddress = \"\";\n      this.editAddress = false;\n    },\n    addPaymentMethod() {},\n    updateTotal() {\n      this.subTotal = this.cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n      this.deliveryFee = 20;\n      this.serviceFee = this.subTotal * 0.025;\n      this.totalPrice = this.subTotal + this.deliveryFee + this.serviceFee;\n    },\n    updateUserAddress() {\n      this.address = this.userData.address;\n    },\n    updateUserPayments() {\n      this.payments = this.userData.payments;\n      this.selectedCard = this.payments.find(p => p.default == true).cardNumber;\n    },\n    getlastfour(cardNumber) {\n      return cardNumber.slice(-4);\n    },\n    submit() {\n      var payload = {\n        cart: this.cart,\n        address: this.address,\n        payment: this.selectedCard\n      };\n      this.submitOrder(payload).then(() => {\n        this.$router.push({\n          name: \"OrderSuccess\"\n        });\n      });\n    }\n  },\n  mounted() {\n    this.userData = this.getUser;\n    this.updateTotal();\n    this.updateUserAddress();\n    this.updateUserPayments();\n  }\n};","map":{"version":3,"mappings":";AAkEA;AAEA;EACAA;EACAC;IACA;IACA;IACA;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC,oBACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACAC;QACAhB;QACAiB;MACA;MAEA;QACA;UAAAvB;QAAA;MACA;IACA;EACA;EACAwB;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","computed","submitOrder","data","userData","editAddress","address","newAddress","payments","subTotal","deliveryFee","serviceFee","totalPrice","selectedCard","methods","updateAddress","addPaymentMethod","updateTotal","updateUserAddress","updateUserPayments","getlastfour","submit","cart","payment","mounted"],"sourceRoot":"src/pages","sources":["OrdersPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 class=\"orders-page__heading\">Order</h2>\n    <div class=\"orders-page__content\">\n      <div class=\"orders-page__left-column\">\n        <h3 class=\"orders-page__content-title\">Deliver Location</h3>\n        <div class=\"orders-page__content-item\">\n          <table>\n            <tr v-if=\"!editAddress\" class=\"orders-page__content-address\">\n              <td>\n                <p>{{ address }}</p>\n              </td>\n              <td><button class=\"btnEditAddr\" @click=\"editAddress = true\">Edit</button></td>\n            </tr>\n            <tr v-else class=\"orders-page__content-address\">\n              <td><input id=\"address\" v-model=\"newAddress\" /></td>\n              <td><button class=\"btnConfirmAddr\" @click=\"updateAddress\">Confirm</button></td>\n            </tr>\n          </table>\n        </div>\n        <h3 class=\"orders-page__content-title\">Payment Method</h3>\n        <div class=\"orders-page__content-item\">\n          <div>\n            <table v-for=\"(card, index) in payments\" :key=\"index\">\n              <tr>\n                <td rowspan=\"2\">\n                  <input type=\"radio\" name=\"payment\" :value=\"card.cardNumber\" v-model=\"selectedCard\" />\n                </td>\n                <td v-if=\"card.type == 'Visa'\" rowspan=\"2\">\n                  <img src=\"../assets/visa.png\" alt=\"Visa\" />\n                </td>\n                <td v-else-if=\"card.type == 'MasterCard'\" rowspan=\"2\">\n                  <img src=\"../assets/mastercard.png\" alt=\"MasterCard\" />\n                </td>\n                <td class=\"cardType\">{{ card.type }}</td>\n              </tr>\n              <tr>\n                <td>{{ \"Ending \" + getlastfour(card.cardNumber) }}</td>\n              </tr>\n            </table>\n            <!-- <div v-for=\"(card, index) in payments\" :key=\"index\">\n              <p>{{ card.cardNumber }}</p>\n              <p>{{ card.cardHolderName }}</p>\n              <p>{{ card.expiryDate }}</p>\n              <p>{{ card.cvv }}</p>\n            </div> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"orders-page__right-column\">\n        <div class=\"orders-page__cart\">\n          <h3>Cart</h3>\n          <div v-for=\"(product, index) in cart\" :key=\"index\">\n            <p>{{ product.name }} x {{ product.quantity }}</p>\n            <p>{{ product.price }}</p>\n          </div>\n          <hr />\n          <BasketCard :subTotal=\"subTotal\" :deliveryFee=\"deliveryFee\" :serviceFee=\"serviceFee\" :totalPrice=\"totalPrice\" />\n        </div>\n      </div>\n    </div>\n    <button class=\"orders-page__submit-button\" @click=\"submit\">Submit Order</button>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"OrdersPage\",\n  computed: {\n    ...mapState(\"cart\", [\"cartCount\", \"cart\"]),\n    ...mapGetters(\"auth\", [\"getUser\"]),\n    ...mapActions({\n      submitOrder: \"order/submitOrder\"\n    }),\n  },\n  data() {\n    return {\n      userData: null,\n      editAddress: false,\n      address: \"\",\n      newAddress: \"\",\n      payments: [],\n      subTotal: 0,\n      deliveryFee: 0,\n      serviceFee: 0,\n      totalPrice: 0,\n      selectedCard: \"\"\n    };\n  },\n  methods: {\n    ...mapMutations(\"user\", [\"setUserAddress\", \"setNewPaymentMethod\"]),\n    updateAddress() {\n      this.setUserAddress(this.newAddress);\n      this.newAddress = \"\";\n      this.editAddress = false;\n    },\n    addPaymentMethod() {\n    },\n    updateTotal() {\n      this.subTotal = this.cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n      this.deliveryFee = 20;\n      this.serviceFee = this.subTotal * 0.025;\n      this.totalPrice = this.subTotal + this.deliveryFee + this.serviceFee;\n    },\n    updateUserAddress() {\n      this.address = this.userData.address;\n    },\n    updateUserPayments() {\n      this.payments = this.userData.payments;\n      this.selectedCard = this.payments.find(p => p.default == true).cardNumber;\n    },\n    getlastfour(cardNumber) {\n      return cardNumber.slice(-4);\n    },\n    submit() {\n      var payload = {\n        cart: this.cart,\n        address: this.address,\n        payment: this.selectedCard,\n      }\n\n      this.submitOrder(payload).then(() => {\n        this.$router.push({ name: \"OrderSuccess\" });\n      });\n    }\n  },\n  mounted() {\n    this.userData = this.getUser;\n    this.updateTotal();\n    this.updateUserAddress();\n    this.updateUserPayments();\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.orders-page {\n  &__heading {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n\n  &__content {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &__left-column {\n    flex: 0 1 65%;\n  }\n\n  &__right-column {\n    flex: 0 1 33%;\n  }\n\n  &__submit-button {\n    width: 100%;\n  }\n\n  &__content-title {\n    font-size: 20px;\n    font-weight: 700;\n    margin-bottom: 10px;\n  }\n\n  &__content-item {\n    background: $color-white;\n    border: 1px solid $color-grey-lightest;\n    border-radius: 16px;\n    padding: 16px;\n    margin-bottom: 24px;\n  }\n\n\n}\n\n.btnEditAddr,\n.btnConfirmAddr {\n  background: none;\n  border: none;\n  color: $color-primary;\n  font-size: 14px;\n  font-weight: 700;\n  cursor: pointer;\n}\n\n.cardType {\n  font-size: 20px;\n  font-weight: 700;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}