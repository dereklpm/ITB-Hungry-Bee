{"ast":null,"code":"import { mapState, mapMutations, mapGetters } from \"vuex\";\nexport default {\n  name: \"OrdersPage\",\n  computed: {\n    ...mapState(\"cart\", [\"cartCount\", \"cart\"]),\n    ...mapGetters(\"auth\", [\"getUser\"])\n  },\n  data() {\n    return {\n      userData: null,\n      editAddress: false,\n      address: \"\",\n      newAddress: \"\",\n      payments: [],\n      subTotal: 0,\n      deliveryFee: 0,\n      serviceFee: 0,\n      totalPrice: 0\n    };\n  },\n  methods: {\n    ...mapMutations(\"user\", [\"setUserAddress\", \"setNewPaymentMethod\"]),\n    updateAddress() {\n      this.setUserAddress(this.newAddress);\n      this.newAddress = \"\";\n      this.editAddress = false;\n    },\n    addPaymentMethod() {},\n    updateTotal() {\n      this.subTotal = this.cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n      this.deliveryFee = 20;\n      this.serviceFee = this.subTotal * 0.025;\n      this.totalPrice = this.subTotal + this.deliveryFee + this.serviceFee;\n    },\n    updateUserAddress() {\n      console.log(this.userData);\n      this.address = this.userData.address;\n    },\n    updateUserPayments() {\n      this.payments = this.userData.payments;\n    }\n  },\n  mounted() {\n    this.userData = this.getUser;\n    this.updateTotal();\n    this.updateUserAddress();\n    this.updateUserPayments();\n  }\n};","map":{"version":3,"mappings":"AA+CA;AAEA;EACAA;EACAC;IACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC,oBACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;EACA;AACA","names":["name","computed","data","userData","editAddress","address","newAddress","payments","subTotal","deliveryFee","serviceFee","totalPrice","methods","updateAddress","addPaymentMethod","updateTotal","updateUserAddress","console","updateUserPayments","mounted"],"sourceRoot":"src/pages","sources":["OrdersPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2 class=\"orders-page__heading\">Order</h2>\n    <div class=\"orders-page__content\">\n      <div class=\"orders-page__left-column\">\n        <h3 class=\"orders-page__content-title\">Deliver Location</h3>\n        <div class=\"orders-page__content-item\">\n          <div v-if=\"!editAddress\">\n            <p>Address: {{ userData.address }}</p>\n            <button class=\"orders-page__btnEditAddr\" @click=\"editAddress = true\">Edit</button>\n          </div>\n          <div v-else>\n            <label for=\"address\">Address:</label>\n            <input id=\"address\" v-model=\"newAddress\" />\n            <button @click=\"updateAddress\">Confirm</button>\n          </div>\n        </div>\n        <h3 class=\"orders-page__content-title\">Payment Method</h3>\n        <div class=\"orders-page__content-item\">\n          <div>\n            <div>{{ userData }}</div>\n            <div v-for=\"(card, index) in userData.payments\" :key=\"index\">\n              <p>{{ card.cardNumber }}</p>\n              <p>{{ card.cardHolderName }}</p>\n              <p>{{ card.expiryDate }}</p>\n              <p>{{ card.cvv }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"orders-page__right-column\">\n        <div class=\"orders-page__cart\">\n          <h3>Cart</h3>\n          <div v-for=\"(product, index) in cart\" :key=\"index\">\n            <p>{{ product.name }} x {{ product.quantity }}</p>\n            <p>{{ product.price }}</p>\n          </div>\n          <hr />\n          <BasketCard :subTotal=\"subTotal\" :deliveryFee=\"deliveryFee\" :serviceFee=\"serviceFee\" :totalPrice=\"totalPrice\" />\n        </div>\n      </div>\n    </div>\n    <button class=\"orders-page__submit-button\">Submit Order</button>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters } from \"vuex\";\n\nexport default {\n  name: \"OrdersPage\",\n  computed: {\n    ...mapState(\"cart\", [\"cartCount\", \"cart\"]),\n    ...mapGetters(\"auth\", [\"getUser\"]),\n  },\n  data() {\n    return {\n      userData: null,\n      editAddress: false,\n      address: \"\",\n      newAddress: \"\",\n      payments: [],\n      subTotal: 0,\n      deliveryFee: 0,\n      serviceFee: 0,\n      totalPrice: 0,\n    };\n  },\n  methods: {\n    ...mapMutations(\"user\", [\"setUserAddress\", \"setNewPaymentMethod\"]),\n    updateAddress() {\n      this.setUserAddress(this.newAddress);\n      this.newAddress = \"\";\n      this.editAddress = false;\n    },\n    addPaymentMethod() {\n    },\n    updateTotal() {\n      this.subTotal = this.cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n      this.deliveryFee = 20;\n      this.serviceFee = this.subTotal * 0.025;\n      this.totalPrice = this.subTotal + this.deliveryFee + this.serviceFee;\n    },\n    updateUserAddress() {\n      console.log(this.userData)\n      this.address = this.userData.address;\n    },\n    updateUserPayments() {\n      this.payments = this.userData.payments;\n    },\n  },\n  mounted() {\n    this.userData = this.getUser;\n    this.updateTotal();\n    this.updateUserAddress();\n    this.updateUserPayments();\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.orders-page {\n  &__heading {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n\n  &__content {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &__left-column {\n    flex: 0 1 65%;\n  }\n\n  &__right-column {\n    flex: 0 1 33%;\n  }\n\n  &__submit-button {\n    width: 100%;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}