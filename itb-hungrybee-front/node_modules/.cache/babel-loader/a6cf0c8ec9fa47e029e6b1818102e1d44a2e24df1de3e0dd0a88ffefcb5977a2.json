{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport client from \"../../api\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"SignPage\",\n  data() {\n    return {\n      isLoading: false,\n      showPassword: false,\n      serverError: \"\",\n      serverSuccess: \"\",\n      formData: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\"\n      },\n      errors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\"\n      }\n    };\n  },\n  methods: {\n    ...mapActions({\n      signUp: 'auth/signUp'\n    }),\n    showPasswordClick() {\n      this.showPassword = !this.showPassword;\n    },\n    changeField(propertyName, value) {\n      if (this.errors[propertyName] !== \"\") {\n        this.errors[propertyName] = \"\";\n      }\n      this.formData[propertyName] = value;\n    },\n    register() {\n      this.isLoading = true;\n      this.signUp(this.formData).then(response => {\n        this.serverError = \"\";\n        this.serverSuccess = response.data.message;\n        this.formData.firstName = \"\";\n        this.formData.lastName = \"\";\n        this.formData.email = \"\";\n        this.formData.phoneNumber = \"\";\n        this.formData.password = \"\";\n        if (response.data.status == \"fail\") {\n          const serverError = response.data.data;\n          this.serverError = serverError;\n        } else {\n          // localStorage.setItem(\"hungrybeeToken\", response.data.data.token);\n          this.$router.push(\"/auth/signUp\");\n          this.$router.push(\"/auth/login\");\n        }\n      }).catch(error => {\n        const serverError = error.response.data;\n        this.alertMessage = serverError.message;\n        if (serverError.errors.firstName) {\n          this.errors.firstName = serverError.errors.firstName;\n        }\n        if (serverError.errors.lastName) {\n          this.errors.lastName = serverError.errors.lastName;\n        }\n        if (serverError.errors.email) {\n          this.errors.email = serverError.errors.email;\n        }\n        if (serverError.errors.phoneNumber) {\n          this.errors.phoneNumber = serverError.errors.phoneNumber;\n        }\n        if (serverError.errors.password) {\n          this.errors.password = serverError.errors.password;\n        }\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAiCA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAL;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EAEAE;IACA;MACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;MAEA,2BACAC;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QAEA;UACA;UAEA;QACA,OACA;UACA;UACA;UACA;QACA;MAEA,GACAC;QACA;QAEA;QAEA;UACA;QACA;QAEA;UACA;QACA;QAEA;UACA;QACA;QAEA;UACA;QACA;QAEA;UACA;QACA;MACA,GACAC;QACA;MACA;IACA;EACA;AACA","names":["name","data","isLoading","showPassword","serverError","serverSuccess","formData","firstName","lastName","email","phoneNumber","password","errors","methods","signUp","showPasswordClick","changeField","register","then","catch","finally"],"sourceRoot":"src/pages/Auth","sources":["SignPage.vue"],"sourcesContent":["<template>\n  <form class=\"signUp\" @submit.prevent>\n    <h1 class=\"signUp__name\">Sign Up</h1>\n\n    <BaseAlert v-if=\"!!serverError\" class=\"signUp__alert\" variant=\"danger\" :message=\"serverError\" />\n\n    <BaseAlert v-if=\"!!serverSuccess\" class=\"signUp__alert\" variant=\"success\" :message=\"serverSuccess\" />\n\n    <div class=\"signUp__userInfo\">\n      <BaseInput label=\"First Name\" :value=\"formData.firstName\" :error=\"errors.firstName\"\n        @onInput=\"(value) => changeField('firstName', value)\" />\n      <BaseInput label=\"Last Name\" :value=\"formData.lastName\" :error=\"errors.lastName\"\n        @onInput=\"(value) => changeField('lastName', value)\" />\n    </div>\n    <BaseInput label=\"Email\" :value=\"formData.email\" :error=\"errors.email\"\n      @onInput=\"(value) => changeField('email', value)\" />\n    <BaseInput label=\"Phone number\" :value=\"formData.phoneNumber\" :error=\"errors.phoneNumber\"\n      @onInput=\"(value) => changeField('phoneNumber', value)\" />\n    <BaseInput class=\"signUp__baseInput\" label=\"Password\" :value=\"formData.password\" type=\"password\"\n      :showPassword=\"showPassword\" :error=\"errors.password\" @onPasswordToggle=\"showPasswordClick\"\n      @onInput=\"(value) => changeField('password', value)\" />\n\n    <BaseButton variant=\"primary\" class=\"signUp__baseBtn\" @onClick=\"register\" :loading=\"isLoading\">\n      Register\n    </BaseButton>\n    <p class=\"signUp__text\">\n      Do you want to out ?\n      <router-link to=\"/auth/login\" class=\"signUp__link\"> Login </router-link>\n    </p>\n  </form>\n</template>\n\n<script>\nimport client from \"../../api\";\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: \"SignPage\",\n  data() {\n    return {\n      isLoading: false,\n      showPassword: false,\n      serverError: \"\",\n      serverSuccess: \"\",\n      formData: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n      },\n      errors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n      },\n    };\n  },\n\n  methods: {\n    ...mapActions({\n      signUp: 'auth/signUp'\n    }),\n    showPasswordClick() {\n      this.showPassword = !this.showPassword;\n    },\n    changeField(propertyName, value) {\n      if (this.errors[propertyName] !== \"\") {\n        this.errors[propertyName] = \"\";\n      }\n      this.formData[propertyName] = value;\n    },\n    register() {\n      this.isLoading = true;\n\n      this.signUp(this.formData)\n        .then((response) => {\n          this.serverError = \"\";\n          this.serverSuccess = response.data.message;\n\n          this.formData.firstName = \"\";\n          this.formData.lastName = \"\";\n          this.formData.email = \"\";\n          this.formData.phoneNumber = \"\";\n          this.formData.password = \"\";\n\n          if (response.data.status == \"fail\") {\n            const serverError = response.data.data;\n\n            this.serverError = serverError;\n          }\n          else {\n            // localStorage.setItem(\"hungrybeeToken\", response.data.data.token);\n            this.$router.push(\"/auth/signUp\")\n            this.$router.push(\"/auth/login\");\n          }\n\n        })\n        .catch((error) => {\n          const serverError = error.response.data;\n\n          this.alertMessage = serverError.message;\n\n          if (serverError.errors.firstName) {\n            this.errors.firstName = serverError.errors.firstName;\n          }\n\n          if (serverError.errors.lastName) {\n            this.errors.lastName = serverError.errors.lastName;\n          }\n\n          if (serverError.errors.email) {\n            this.errors.email = serverError.errors.email;\n          }\n\n          if (serverError.errors.phoneNumber) {\n            this.errors.phoneNumber = serverError.errors.phoneNumber;\n          }\n\n          if (serverError.errors.password) {\n            this.errors.password = serverError.errors.password;\n          }\n        })\n        .finally(() => {\n          this.isLoading = false;\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.signUp {\n  width: 50%;\n  margin: 0 auto;\n\n  &__alert {\n    margin-bottom: 16px;\n  }\n\n  &__name {\n    color: $color-dark;\n    font-size: 32px;\n    font-family: $base-font;\n    margin-bottom: 40px;\n    font-weight: 700;\n    letter-spacing: 0.1px;\n  }\n\n  &__userInfo {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 0 10px;\n  }\n\n  &__baseInput {\n    margin-bottom: 28px !important;\n  }\n\n  &__baseBtn {\n    width: 100%;\n    margin-bottom: 35px;\n  }\n\n  &__text {\n    color: $color-dark;\n    font-family: $base-font;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 20px;\n    text-align: center;\n  }\n\n  &__link {\n    font-size: 14px;\n    color: $color-primary;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .signUp {\n    width: 95%;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}