{"ast":null,"code":"import { mapState, mapMutations, mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"OrdersPage\",\n  data() {\n    return {\n      showOrder: false,\n      orders: null,\n      currentStep: 1,\n      steps: ['Waiting restaurant receive order', 'Restaurant preparing', 'Delivery boy picked up the order', 'Finished']\n    };\n  },\n  computed: {\n    deliveryTime() {\n      if (!this.orderData) return \"\";\n      const deliveryTime = this.orderData.cart[0].minDeliverTime; // Assuming only one item in the cart\n      const deliveryTimeInMinutes = deliveryTime; // Extract the delivery time in minutes\n      const targetTime = new Date();\n      targetTime.setMinutes(targetTime.getMinutes() + deliveryTimeInMinutes); // Calculate the target time by adding the delivery time to the current time\n      return targetTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }); // Format the target time as HH:mm\n    }\n  },\n\n  methods: {\n    ...mapActions({\n      trackOrder: 'order/trackOrder'\n    }),\n    trackOrderData() {\n      console.log(\"trackOrderData: \" + this.$route.params.orderId);\n      this.trackOrder(this.$route.params.orderId).then(response => {\n        console.log(\"trackOrderData\");\n        console.log(response);\n        this.orderData = response.data.data;\n        this.currentStep = this.orderData.step;\n        console.log(this.orderData);\n        this.showOrder = true;\n      });\n    }\n  },\n  mounted() {\n    this.trackOrderData();\n  }\n};","map":{"version":3,"mappings":"AA8DA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC,QACA,oCACA,wBACA,oCACA;IAEA;EACA;EACAC;IACAC;MACA,qBACA;MACA;MACA;MACA;MACAC;MACA;QAAAC;QAAAC;MAAA;IACA;EACA;;EACAC;IACA;MACAC;IACA;IACAC;MACAC;MACA,4CACAC;QACAD;QACAA;QACA;QACA;QAEAA;QACA;MACA;IACA;EACA;EACAE;IACA;EACA;AACA","names":["name","data","showOrder","orders","currentStep","steps","computed","deliveryTime","targetTime","hour","minute","methods","trackOrder","trackOrderData","console","then","mounted"],"sourceRoot":"src/pages","sources":["OrdersTrackPage.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div v-if=\"!showOrder\">\n      Order Not Found\n    </div>\n    <div v-else>\n      <div class=\"order\">\n        <div class=\"order-header\">\n          <h2>Order #{{ orderData.orderId }}</h2>\n        </div>\n        <div></div>\n        <div class=\"process-bar\">\n          <table>\n            <tr>\n              <td v-for=\"(p, i) in steps\" class=\"stepTD\">\n                <div>\n                  <div class=\"step\" :class=\"{ 'active': i + 1 <= currentStep }\">{{ p }}</div>\n                  <div class=\"line\" :class=\"{ 'active': i + 1 < currentStep }\"></div>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </div>\n      </div>\n      <div class=\"order-body\">\n        <div class=\"order-details\">\n          <div class=\"order-detail\">\n            <i class=\"fas fa-clock\"></i>\n            <span class=\"label\">Delivery Time:</span>\n            <span class=\"value\">{{ deliveryTime }}</span>\n          </div>\n          <div class=\"order-detail\">\n            <i class=\"fas fa-map-marker-alt\"></i>\n            <span class=\"label\">Delivery Place:</span>\n            <span class=\"value\">{{ orderData.address }}</span>\n          </div>\n          <div class=\"order-detail\">\n            <i class=\"fas fa-dollar-sign\"></i>\n            <span class=\"label label-width\">Total:</span>\n            <span class=\"value\">{{ orderData.basket.totalPrice }}</span>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"order-items\">\n          <h3>Order Items:</h3>\n          <ul class=\"item-list\">\n            <li v-for=\"item in orderData.cart\" :key=\"item.id\">\n              <img :src=\"item.image\" alt=\"item image\" class=\"item-image\">\n              <div class=\"item-details\">\n                <span class=\"item-name\">{{ item.name }}</span>\n                <span class=\"item-quantity\">&nbsp;&nbsp;&nbsp;x{{ item.quantity }}</span>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"OrdersPage\",\n  data() {\n    return {\n      showOrder: false,\n      orders: null,\n      currentStep: 1,\n      steps: [\n        'Waiting restaurant receive order',\n        'Restaurant preparing',\n        'Delivery boy picked up the order',\n        'Finished',\n      ],\n    };\n  },\n  computed: {\n    deliveryTime() {\n      if (!this.orderData)\n        return \"\";\n      const deliveryTime = this.orderData.cart[0].minDeliverTime; // Assuming only one item in the cart\n      const deliveryTimeInMinutes = deliveryTime; // Extract the delivery time in minutes\n      const targetTime = new Date();\n      targetTime.setMinutes(targetTime.getMinutes() + deliveryTimeInMinutes); // Calculate the target time by adding the delivery time to the current time\n      return targetTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); // Format the target time as HH:mm\n    },\n  },\n  methods: {\n    ...mapActions({\n      trackOrder: 'order/trackOrder',\n    }),\n    trackOrderData() {\n      console.log(\"trackOrderData: \" + this.$route.params.orderId);\n      this.trackOrder(this.$route.params.orderId)\n        .then(response => {\n          console.log(\"trackOrderData\")\n          console.log(response)\n          this.orderData = response.data.data;\n          this.currentStep = this.orderData.step;\n\n          console.log(this.orderData)\n          this.showOrder = true;\n        })\n    }\n  },\n  mounted() {\n    this.trackOrderData();\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.order,\n.order-body,\n.order-items,\n.order-summary {\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.stepTD {\n  width: 18%;\n  text-align: center;\n}\n\n.stepTD .step {\n  background-color: #ddd;\n  height: 50px;\n  padding: 10px;\n}\n\n.stepTD .step.active {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.process-step {\n  position: relative;\n  flex: 1;\n  text-align: center;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n}\n\n.step-name {\n  position: relative;\n  z-index: 1;\n  display: inline-block;\n  background-color: white;\n  padding: 0 10px;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: bold;\n  color: #333;\n  text-transform: capitalize;\n}\n\n.step-line {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background-color: #ccc;\n  z-index: 0;\n  transform: translateY(-50%);\n}\n\n.step-line.active {\n  background-color: green;\n}\n\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n\n  h2 {\n    margin: 0;\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n  }\n}\n\n.order-details {\n  flex-basis: 50%;\n  margin-right: 20px;\n\n  .order-detail {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n    font-size: 20px;\n\n    i {\n      width: 25px;\n      color: silver\n    }\n\n    .label {\n      font-size: 20px;\n      font-weight: bold;\n      color: grey;\n      margin-right: 10px;\n    }\n\n    .value {\n      font-size: 20px;\n      font-weight: bold;\n      color: black;\n    }\n  }\n}\n\n.order-items {\n  flex-basis: 50%;\n\n  h3 {\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 10px;\n  }\n\n  .item-list {\n    list-style: none;\n    padding: 0;\n\n    li {\n      display: flex;\n      align-items: center;\n      margin-bottom: 10px;\n\n      .item-image {\n        width: 80px;\n        height: 80px;\n        object-fit: cover;\n        margin-right: 20px;\n        border-radius: 10px;\n      }\n\n      .item-details {\n        flex: 1;\n\n        .item-name {\n          font-size: 20px;\n          font-weight: bold;\n          color: #333;\n          margin-bottom: 5px;\n        }\n\n        .item-quantity {\n          font-size: 20px;\n          color: #666;\n        }\n      }\n    }\n  }\n}\n\n.order-summary {\n  flex-basis: 100%;\n  margin-top: 20px;\n  border-top: 1px solid #ccc;\n  padding-top: 20px;\n\n  .order-detail {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n\n    i.fas {\n      width: 25px;\n    }\n\n    .label {\n      font-size: 16px;\n      font-weight: bold;\n      color: #666;\n      margin-right: 10px;\n    }\n\n    .value {\n      font-size: 16px;\n      font-weight: bold;\n      color: #333;\n    }\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}