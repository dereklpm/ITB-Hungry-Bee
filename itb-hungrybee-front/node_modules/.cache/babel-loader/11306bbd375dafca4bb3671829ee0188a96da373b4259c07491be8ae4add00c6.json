{"ast":null,"code":"import { mapState, mapMutations, mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"OrdersPage\",\n  data() {\n    return {\n      orderData: {\n        // The JSON object provided\n      },\n      currentStep: 1,\n      steps: ['Waiting restaurant receive order', 'Restaurant preparing', 'Delivery boy picked up the order', 'Finished']\n    };\n  },\n  computed: {\n    deliveryTime() {\n      const deliveryTime = this.orderData.cart[0].deliveryTime; // Assuming only one item in the cart\n      const deliveryTimeInMinutes = deliveryTime; // Extract the delivery time in minutes\n      const targetTime = new Date();\n      targetTime.setMinutes(targetTime.getMinutes() + deliveryTimeInMinutes); // Calculate the target time by adding the delivery time to the current time\n      return targetTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }); // Format the target time as HH:mm\n    }\n  },\n\n  methods: {\n    ...mapActions({\n      trackOrder: 'order/trackOrder'\n    }),\n    trackOrderData() {\n      // this.trackOrder(this.$route.params.orderId)\n      // .then(response => {\n\n      // })\n\n      this.orderData = JSON.parse(localStorage.getItem('hborder'));\n      console.log(this.orderData);\n    }\n  },\n  mounted() {\n    this.trackOrderData();\n  }\n};","map":{"version":3,"mappings":"AA8DA;AAEA;EACAA;EACAC;IACA;MACAC;QACA;MAAA,CACA;MACAC;MACAC,QACA,oCACA,wBACA,oCACA;IAEA;EACA;EACAC;IACAC;MACA;MACA;MACA;MACAC;MACA;QAAAC;QAAAC;MAAA;IACA;EACA;;EACAC;IACA;MACAC;IACA;IACAC;MACA;MACA;;MAEA;;MAEA;MACAC;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","orderData","currentStep","steps","computed","deliveryTime","targetTime","hour","minute","methods","trackOrder","trackOrderData","console","mounted"],"sourceRoot":"src/pages","sources":["OrdersTrackPage.vue"],"sourcesContent":["<template>\n  <div class=\"order\">\n    <div class=\"order-header\">\n      <h2>Order #{{ orderData.id }}</h2>\n      <div class=\"process-bar\">\n        <div class=\"process-step\" v-for=\"(step, index) in steps\" :key=\"index\" :class=\"{ 'active': currentStep === index + 1 }\">\n          <div class=\"step-name\">{{ step }}</div>\n          <div class=\"step-line\" :class=\"{ 'active': currentStep > index + 1 }\"></div>\n        </div>\n      </div>\n    </div>\n    <div class=\"order-body\">\n      <div class=\"order-details\">\n        <div class=\"order-detail\">\n          <span class=\"label\">Delivery Time:</span>\n          <span class=\"value\">{{ deliveryTime }}</span>\n        </div>\n        <div class=\"order-detail\">\n          <span class=\"label\">Delivery Place:</span>\n          <span class=\"value\">{{ orderData.address }}</span>\n        </div>\n        <div class=\"order-detail\">\n          <span class=\"label\">Payment Method:</span>\n          <span class=\"value\">{{ orderData.payment }}</span>\n        </div>\n      </div>\n      <div class=\"order-items\">\n        <h3>Order Items:</h3>\n        <ul class=\"item-list\">\n          <li v-for=\"item in orderData.cart\" :key=\"item.id\">\n            <img :src=\"item.image\" alt=\"item image\" class=\"item-image\">\n            <div class=\"item-details\">\n              <span class=\"item-name\">{{ item.name }}</span>\n              <span class=\"item-price\">{{ item.price }}</span>\n              <span class=\"item-quantity\">x{{ item.quantity }}</span>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"order-summary\">\n        <div class=\"order-detail\">\n          <span class=\"label\">Subtotal:</span>\n          <span class=\"value\">{{ orderData.basket.subTotal }}</span>\n        </div>\n        <div class=\"order-detail\">\n          <span class=\"label\">Delivery Fee:</span>\n          <span class=\"value\">{{ orderData.basket.deliveryFee }}</span>\n        </div>\n        <div class=\"order-detail\">\n          <span class=\"label\">Service Fee:</span>\n          <span class=\"value\">{{ orderData.basket.serviceFee }}</span>\n        </div>\n        <div class=\"order-detail\">\n          <span class=\"label\">Total:</span>\n          <span class=\"value\">{{ orderData.basket.totalPrice }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"OrdersPage\",\n  data() {\n    return {\n      orderData: {\n        // The JSON object provided\n      },\n      currentStep: 1,\n      steps: [\n        'Waiting restaurant receive order',\n        'Restaurant preparing',\n        'Delivery boy picked up the order',\n        'Finished',\n      ],\n    };\n  },\n  computed: {\n    deliveryTime() {\n      const deliveryTime = this.orderData.cart[0].deliveryTime; // Assuming only one item in the cart\n      const deliveryTimeInMinutes = deliveryTime; // Extract the delivery time in minutes\n      const targetTime = new Date();\n      targetTime.setMinutes(targetTime.getMinutes() + deliveryTimeInMinutes); // Calculate the target time by adding the delivery time to the current time\n      return targetTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); // Format the target time as HH:mm\n    },\n  },\n  methods: {\n    ...mapActions({\n      trackOrder: 'order/trackOrder',\n    }),\n    trackOrderData(){\n      // this.trackOrder(this.$route.params.orderId)\n      // .then(response => {\n        \n      // })\n\n      this.orderData = JSON.parse(localStorage.getItem('hborder'));\n      console.log(this.orderData)\n    }\n  },\n  mounted() {\n    this.trackOrderData();\n  },\n};\n</script>\n\n\n<style lang=\"scss\">\n.order {\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  padding: 20px;\n}\n.process-step {\n  position: relative;\n  flex: 1;\n  text-align: center;\n}\n.step-name {\n  position: relative;\n  z-index: 1;\n  display: inline-block;\n  background-color: white;\n  padding: 0 10px;\n}\n.step-line {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background-color: #ccc;\n  z-index: 0;\n  transform: translateY(-50%);\n}\n.step-line.active {\n  background-color: green;\n}\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n.order-header h2 {\n  margin: 0;\n}\n.order-body {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}